{"version":3,"file":"markdown-to-standalone-html.js","sourceRoot":"","sources":["../src/markdown-to-standalone-html.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport fs from 'fs'\nimport path from 'path'\n// import pkgJson from '../package.json'\nimport markdownToStandAloneHtml, { Plugin } from './index'\nimport { program } from 'commander'\nconst YAML = require('yaml-front-matter')\n\nconst pkgJson = JSON.parse(fs.readFileSync(path.join(__dirname, '../package.json'), 'utf8'))\n\nprogram.showHelpAfterError()\n\nprogram.version(pkgJson.version, '-v, --version', 'output the current version')\n\nprogram.description(`${pkgJson.description as string}\n\nMath support is provided with KATEX using standard LaTeX formulae. Surround your LaTeX with a single '$' on each side for inline rendering, or between '$$' for block rendering.\n\nFenced code blocks are highlighted using [highlight.js](https://highlightjs.org/).\n\nA fenced code block with language 'chordsong' or 'song' can be used to render a song with lyrics and chords using chordsong (https://github.com/juanelas/chordsong). You can alternatively use language 'chords' which will use markdown-it-chords (https://github.com/dnotes/markdown-it-chords) instead.\n\nSee example/example.md and its rendered version example/example.html for more help.\n`)\n\nprogram.arguments('<inputfile>')\n\nprogram.option('-A, --disable-all', 'disable all plugins')\n\nprogram.option('-B, --disable-bootstrap', 'disable embedding the bootstrap CSS in the generated html file')\nprogram.option('-bj, --enable-bootstrap-js', 'enable embedding bootstrap JS files in the generated html file. It may be useful when using a custom theme')\n\nprogram.option('-C, --disable-chords', 'disable support for rendering lyrics with chords using chordsong')\n\nprogram.option('-CC, --disable-code-chords', 'disable support for rendering lyrics with chords using code-chords')\n\nprogram.option('-H, --disable-highlightjs', 'disable syntax highlighting of fenced code blocks with highlight.js')\nprogram.option('-hs, --highlightjs-style <stylename>', 'set the highlight.js style. See https://github.com/highlightjs/highlight.js/tree/master/src/styles', 'vs2015')\n\nprogram.option('-K, --disable-katex', 'disable math support (prevents embedding the KaTeX CSS and fonts)')\n\nprogram.option('-o, --output <outputfile>', 'set the output file name. If omitted the output filename is the input one with the extension switched to .html')\n\nprogram.option('-OL, --disable-open-link', 'disable opening links in a new tab or window')\n\nprogram.option('-t, --template <template>', 'force using a user-provided template instead of the default one. Generate two files <template>.html and <template>.toc.html. Take a look to template.html (no toc version) and template.toc.html (TOC version) for inspiration.')\n\nprogram.option('-d, --toc-max-depth <depth>', 'the TOC will only use headings whose depth is at most maxdepth. A value of 0 disables the TOC', '0')\nprogram.option('--toc-title <title>', 'the title used for the TOC', 'Table of contents')\n\nprogram.parse(process.argv)\n\nconst inputFile: string = program.args[0]\n\nconst fileContents = fs.readFileSync(inputFile, 'utf8')\nconst mdLines = fileContents.split('\\n')\n\n// Retrieve the front matter\nconst yaml = YAML.loadFront(fileContents)\n\n// Remove the front matter if present\nconst mdContents = mdLines[0] === '---' ? mdLines.slice(mdLines.indexOf('---', 1) + 1).join('\\n') : fileContents\n\nconst programOptions = program.opts()\n\nlet outputFile: string = programOptions.output\nif (outputFile === undefined) {\n  const pos = inputFile.lastIndexOf('.')\n  outputFile = inputFile.slice(0, pos < 0 ? inputFile.length : pos) + '.html'\n}\n\nlet template: string | undefined\nlet stylesheet: string | undefined\nif (yaml.template !== undefined) {\n  template = path.resolve(__dirname, '../templates/' + yaml.template + '.html')\n  stylesheet = path.resolve(__dirname, '../templates/css/' + yaml.template + '.css')\n} else if (programOptions.template !== undefined) {\n  template = path.isAbsolute(programOptions.template)\n    ? programOptions.template\n    : path.resolve('.', programOptions.template)\n} else {\n  // template = path.resolve('.', 'templates/basic.html')\n  template = path.resolve(__dirname, '../templates/basic.html')\n  stylesheet = path.resolve(__dirname, '../templates/css/basic.css')\n}\n\nconst plugins: Plugin[] = []\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nif (!programOptions.disableAll && !programOptions.disableHighlightjs) plugins.push({ name: 'highlightjs', options: { theme: programOptions.highlightjsStyle } })\nif (!programOptions.disableAll && !programOptions.disableBootstrap) plugins.push({ name: 'bootstrapCss' })\nif (!programOptions.disableAll && programOptions.enableBootstrapJs) plugins.push({ name: 'bootstrapJs' })\nif (!programOptions.disableAll && !programOptions.disableKatex) plugins.push({ name: 'katex' })\nif (!programOptions.disableAll && !programOptions.disableOpenLink) plugins.push({ name: 'open-link' })\nif (!programOptions.disableAll && programOptions.tocMaxDepth > 0) plugins.push({ name: 'toc', options: { tocMaxDepth: Number(programOptions.tocMaxDepth), tocTitle: programOptions.tocTitle } })\nif (!programOptions.disableAll && !programOptions.disableChords) plugins.push({ name: 'chordsong' })\nif (!programOptions.disableAll && !programOptions.disableCodeChords) plugins.push({ name: 'code-chords' })\n/* eslint-enable @typescript-eslint/strict-boolean-expressions */\n\nconst options = {\n  basePath: path.dirname(inputFile),\n  template,\n  stylesheet,\n  plugins\n}\n\nmarkdownToStandAloneHtml(mdContents, options).then((htmlContents) => {\n  fs.writeFile(outputFile, htmlContents, 'utf8', (err) => {\n    if (err != null) throw err\n    console.log('Output saved to ' + outputFile)\n  })\n}).catch((error) => {\n  console.error(error)\n})\n"]}