{"version":3,"file":"markdown-it-code-chords.js","sourceRoot":"","sources":["../../src/plugins/markdown-it-code-chords.ts"],"names":[],"mappings":";;;;;AAAA,8DAAoC;AACpC,4EAA2C;AAG3C,MAAM,QAAQ,GAAG,IAAA,qBAAU,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,4BAAU,CAAC,CAAA;AAE7D,SAAwB,UAAU,CAAE,EAAc;IAChD,MAAM,aAAa,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAmB,CAAA;IAE3D,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI;QACjE,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QAEzB,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE,CAAC;YACpD,OAAO,SAAS,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAA;QACzD,CAAC;QAGD,OAAO,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;IACvD,CAAC,CAAA;AACH,CAAC;AAbD,6BAaC","sourcesContent":["import MarkdownIt from 'markdown-it'\nimport mdItChords from 'markdown-it-chords'\nimport { RenderRule } from 'markdown-it/lib/renderer'\n\nconst mdChords = MarkdownIt({ breaks: true }).use(mdItChords)\n\nexport default function codeChords (md: MarkdownIt): void {\n  const defaultRender = md.renderer.rules.fence as RenderRule\n\n  md.renderer.rules.fence = function (tokens, idx, options, env, self) {\n    const token = tokens[idx]\n\n    if (token.tag === 'code' && token.info === 'chords') {\n      return `<song>${mdChords.render(token.content)}</song>`\n    }\n\n    // pass token to default renderer.\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n"]}