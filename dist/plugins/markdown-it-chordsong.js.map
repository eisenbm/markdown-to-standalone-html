{"version":3,"file":"markdown-it-chordsong.js","sourceRoot":"","sources":["../../src/plugins/markdown-it-chordsong.ts"],"names":[],"mappings":";;;;;AAEA,0DAAgD;AAEhD,SAAwB,eAAe,CAAE,EAAc,EAAE,MAAgB;IACvE,MAAM,aAAa,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAmB,CAAA;IAE3D,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI;QACjE,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;QAEzB,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,EAAE,CAAC;YAClF,MAAM,IAAI,GAAG,IAAA,mBAAS,EAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAc,CAAA;YAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACrD,OAAO,SAAS,IAAI,CAAC,OAAO,SAAS,CAAA;QACvC,CAAC;QAGD,OAAO,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;IACvD,CAAC,CAAA;AACH,CAAC;AAfD,kCAeC","sourcesContent":["import MarkdownIt from 'markdown-it'\nimport { RenderRule } from 'markdown-it/lib/renderer'\nimport chordsong, { SongParts } from 'chordsong'\n\nexport default function chordsongPlugin (md: MarkdownIt, cssArr: string[]): void {\n  const defaultRender = md.renderer.rules.fence as RenderRule\n\n  md.renderer.rules.fence = function (tokens, idx, options, env, self) {\n    const token = tokens[idx]\n\n    if (token.tag === 'code' && (token.info === 'song' || token.info === 'chordsong')) {\n      const song = chordsong(token.content, undefined, undefined, false) as SongParts\n      if (!cssArr.includes(song.css)) cssArr.push(song.css)\n      return `<song>${song.content}</song>`\n    }\n\n    // pass token to default renderer.\n    return defaultRender(tokens, idx, options, env, self)\n  }\n}\n"]}